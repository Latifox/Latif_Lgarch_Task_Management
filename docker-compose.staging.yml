version: '3.8'

services:
  # MongoDB service
  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=task-manager
    networks:
      - app-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend service
  backend:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_USERNAME:-user}/task-manager-backend:${TAG:-latest}
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=staging
      - MONGODB_URI=mongodb://mongodb:27017/task-manager
      - JWT_SECRET=${JWT_SECRET}
      - PORT=5000
      - CORS_ORIGIN=https://staging.yourtaskmanager.com
    depends_on:
      - mongodb
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend service
  frontend:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_USERNAME:-user}/task-manager-frontend:${TAG:-latest}
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=staging
      - REACT_APP_API_URL=https://api-staging.yourtaskmanager.com
    depends_on:
      - backend
    networks:
      - app-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx for reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backup service
  backup:
    image: mongo:4.4
    volumes:
      - mongodb_data:/data/db:ro
      - backup_data:/backup
    depends_on:
      - mongodb
    entrypoint: >
      /bin/sh -c "
        set -e;
        echo 'Starting MongoDB backup service';
        while true; do
          TIMESTAMP=$$(date +%Y%m%d_%H%M%S);
          echo \"Creating backup $$TIMESTAMP\";
          mongodump --host mongodb --db task-manager --archive=/backup/backup_$$TIMESTAMP.gz --gzip;
          echo 'Backup completed';
          echo 'Cleaning old backups';
          cd /backup && ls -t | tail -n +8 | xargs rm -f;
          echo 'Waiting for next backup in 24 hours';
          sleep 86400;
        done
      "
    restart: always
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Define volumes
volumes:
  mongodb_data:
  backup_data:

# Define networks
networks:
  app-network:
    driver: bridge 