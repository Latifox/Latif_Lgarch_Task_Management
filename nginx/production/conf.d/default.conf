# Upstream pour le backend - Load balancing entre les instances
upstream backend {
    server backend:5000 weight=1;
    server backend:5000 weight=1;
    server backend:5000 weight=1;
    keepalive 32;
}

# Upstream pour le frontend - Load balancing entre les instances
upstream frontend {
    server frontend:80 weight=1;
    server frontend:80 weight=1;
    keepalive 32;
}

# Configuration du serveur pour rediriger HTTP vers HTTPS
server {
    listen 80;
    listen [::]:80;

    server_name yourtaskmanager.com www.yourtaskmanager.com;
    
    # Pour Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirection vers HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Configuration du serveur HTTPS pour le frontend
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name yourtaskmanager.com www.yourtaskmanager.com;

    # Configuration SSL
    ssl_certificate /etc/nginx/ssl/yourtaskmanager.com.crt;
    ssl_certificate_key /etc/nginx/ssl/yourtaskmanager.com.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    
    # HSTS (15768000 secondes = 6 mois)
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains" always;
    
    # Autres en-têtes de sécurité
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # Logs
    access_log /var/log/nginx/yourtaskmanager.com.access.log;
    error_log /var/log/nginx/yourtaskmanager.com.error.log;

    # Racine du serveur web
    root /var/www/html;
    index index.html;

    # Règles de cache pour les fichiers statiques
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Requêtes vers le frontend
    location / {
        try_files $uri $uri/ /index.html;
        
        # Proxy vers le service frontend
        proxy_pass http://frontend;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Gestion des erreurs
    error_page 404 /404.html;
    location = /404.html {
        root /var/www/html;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/html;
    }
}

# Configuration du serveur API
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name api.yourtaskmanager.com;

    # Configuration SSL
    ssl_certificate /etc/nginx/ssl/api.yourtaskmanager.com.crt;
    ssl_certificate_key /etc/nginx/ssl/api.yourtaskmanager.com.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    
    # HSTS (15768000 secondes = 6 mois)
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains" always;
    
    # Autres en-têtes de sécurité
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # Logs
    access_log /var/log/nginx/api.yourtaskmanager.com.access.log;
    error_log /var/log/nginx/api.yourtaskmanager.com.error.log;

    # Point de contrôle de santé
    location /health {
        proxy_pass http://backend/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        access_log off;
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Requêtes API
    location / {
        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://yourtaskmanager.com';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
        add_header 'Access-Control-Allow-Credentials' 'true';
        
        # Les requêtes OPTIONS ne devraient pas être proxysées
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://yourtaskmanager.com';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Proxy vers le service backend
        proxy_pass http://backend;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Gestion des erreurs
    error_page 404 /404.json;
    location = /404.json {
        return 404 '{"error":"Not Found","message":"The requested resource does not exist."}';
        default_type application/json;
    }

    error_page 500 502 503 504 /50x.json;
    location = /50x.json {
        return 500 '{"error":"Server Error","message":"The server encountered an error processing your request."}';
        default_type application/json;
    }
} 